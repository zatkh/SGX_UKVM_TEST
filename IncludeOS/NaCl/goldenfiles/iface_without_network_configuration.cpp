// This file is a part of the IncludeOS unikernel - www.includeos.org
//
// Copyright 2017-2018 IncludeOS AS, Oslo, Norway
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Autogenerated by NaCl

#include <iostream>
#include <net/inet>
#include <net/super_stack.hpp>
#include <net/ip4/cidr.hpp>
#include <net/vlan_manager.hpp>
#include <hw/devices.hpp>
#include <syslogd>

using namespace net;

namespace nacl {
  class Filter {
  public:
    virtual Filter_verdict<IP4> operator()(IP4::IP_packet_ptr pckt, Inet& stack, Conntrack::Entry_ptr ct_entry) = 0;
    virtual ~Filter() {}
  };
}

void register_plugin_nacl() {
	INFO("NaCl", "Registering NaCl plugin");

	// vlan vlan1
	Super_stack::inet().create(VLAN_manager::get(0).add(hw::Devices::nic(0), 10), 0, 10);
	auto& vlan1 = Super_stack::get(0, 10);
	vlan1.network_config(IP4::addr{10,0,0,45}, IP4::addr{255,255,255,0}, 0);
	// vlan vlan2
	Super_stack::inet().create(VLAN_manager::get(0).add(hw::Devices::nic(0), 11), 0, 11);
	auto& vlan2 = Super_stack::get(0, 11);
	vlan2.network_config(IP4::addr{10,0,0,46}, IP4::addr{255,255,255,0}, 0);
	auto& eth0 = Super_stack::get(0);
	eth0.nic().set_sendq_limit(100);
	eth0.nic().set_buffer_limit(100);

}
